# Uploads the project to knowledge base dev environment

name: Pull Request Checks
run-name: ${{ github.actor }} is running checks on pull request
on:
  pull_request:
    branches:
      - "master"

env:
  AWS_REGION: ${{ vars.AWS_REGION != '' && vars.AWS_REGION || 'us-east-1' }}
  DEPLOY_ZIP_NAME: "deploy.zip"
  # intended to be used recursively so folders should be good
  PACKAGE_FILES: .bin .platform client Dockerrun.aws.json Dockerfile rules.json

jobs:
  pull-request-checks:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54

      - name: set up node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: install node packages
        run: npm ci
      - name: node lint
        run: npm run lint

      - name: install go dependencies
        run: go mod download
      - name: build go project
        run: GOOS=linux GOARCH=amd64 go build -o .bin/run
      - name: handle permissions before package
        run: chmod -R 0755 ${{ env.DEPLOY_ZIP_NAME }} ${{ env.PACKAGE_FILES }}
      - name: package the project
        run: zip -r ${{ env.DEPLOY_ZIP_NAME }} ${{ env.PACKAGE_FILES }}

      - name: configure aws credentials for DEV account to install packages
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
      # TODO: remove this in the future
      - name: notify usage of secrets context
        run: |
          if [ -z "${{ steps.creds.outputs.aws-access-key-id }}" ]; then
            echo "No aws access key got from 'steps.creds'. Using secrets context"
          fi
      - name: deploy to elastic beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ steps.creds.outputs.aws-access-key-id || secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ steps.creds.outputs.aws-secret-access-key || secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ vars.EB_APPLICATION_NAME }}
          environment_name: ${{ vars.EB_ENVIRONMENT_NAME }}
          version_label: GitHub-PR-${{ github.event.number }}-${{ github.SHA }}
          region: ${{ env.AWS_REGION }}

          aws_session_token: ${{ steps.creds.outputs.aws-session-token || secrets.AWS_SESSION_TOKEN }}
          deployment_package: ${{ env.DEPLOY_ZIP_NAME }}
          version_description: 'GitHub SHA: "${{ github.SHA }}"'
          existing_bucket_name: ${{ vars.EB_AWS_BUCKET }}
